<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-25T17:06:22 IST" name="Suite" finished-at="2021-07-25T17:06:38 IST" duration-ms="15503">
    <groups>
    </groups>
    <test started-at="2021-07-25T17:06:22 IST" name="validating app test" finished-at="2021-07-25T17:06:22 IST" duration-ms="4">
    </test> <!-- validating app test -->
    <test started-at="2021-07-25T17:06:22 IST" name="validating title test" finished-at="2021-07-25T17:06:38 IST" duration-ms="15503">
      <class name="Framework.validateTitle">
        <test-method is-config="true" signature="initialize()[pri:0, instance:Framework.validateTitle@466276d8]" started-at="2021-07-25T17:06:22 IST" name="initialize" finished-at="2021-07-25T17:06:37 IST" duration-ms="14310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="basepageNavigation()[pri:0, instance:Framework.validateTitle@466276d8]" started-at="2021-07-25T17:06:37 IST" name="basepageNavigation" finished-at="2021-07-25T17:06:37 IST" duration-ms="142" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Automation Practice Website123] but found [Automation Practice Website]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Automation Practice Website123] but found [Automation Practice Website]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Framework.validateTitle.basepageNavigation(validateTitle.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basepageNavigation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Framework.validateTitle@466276d8]" started-at="2021-07-25T17:06:38 IST" name="teardown" finished-at="2021-07-25T17:06:38 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Framework.validateTitle -->
    </test> <!-- validating title test -->
  </suite> <!-- Suite -->
</testng-results>
